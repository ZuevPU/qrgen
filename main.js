// üîó URL Google Apps Script Web App
const SCRIPT_URL = 'https://script.google.com/macros/s/AKfycbzQ-drrXDEwbhrZ6UN7IE26howT2NDN52yhzhjWssR-QqRIiyL-S_aVb4mtiqSS2VuVcg/exec?action=nextToken';

// üéØ DOM-—ç–ª–µ–º–µ–Ω—Ç—ã
const qrcodeBox  = document.getElementById('qrcode');
const linkBox    = document.getElementById('link');
const btnRefresh = document.getElementById('refresh');

let currentToken = null;
let pollId = null;

// üîò –°–æ–±—ã—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É
btnRefresh.addEventListener('click', () => getNewToken(true));

// üöÄ –ü—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
getNewToken();

/**
 * üì¶ –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–æ–∫–µ–Ω–∞ –∏ –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ QR
 */
async function getNewToken(forced = false) {
  clearPolling();
  showLoadingState();

  try {
    const res = await fetch(`${SCRIPT_URL}?action=nextToken${forced ? '&forced=1' : ''}`);
    if (!res.ok) throw new Error(`–û—à–∏–±–∫–∞ ${res.status}`);

    const data = await res.json();
    if (!data.token || !data.url) throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞');

    currentToken = data.token;
    renderQR(data.url);
    linkBox.textContent = data.url;

    startPolling();
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞:', err);
    linkBox.textContent = '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å QR-–∫–æ–¥. –ü—Ä–æ–≤–µ—Ä—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.';
    qrcodeBox.innerHTML = 'üö´';
  }
}

/**
 * üñº –ì–µ–Ω–µ—Ä–∞—Ü–∏—è QR-–∫–æ–¥–∞
 */
function renderQR(url) {
  qrcodeBox.innerHTML = '';
  new QRCode(qrcodeBox, {
    text: url,
    width: 256,
    height: 256,
    correctLevel: QRCode.CorrectLevel.M
  });
}

/**
 * üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –ª–∏ —Ç–æ–∫–µ–Ω
 */
function startPolling() {
  pollId = setInterval(async () => {
    try {
      const res = await fetch(`${SCRIPT_URL}?action=checkToken&token=${currentToken}`);
      if (!res.ok) throw new Error(`–û—à–∏–±–∫–∞ ${res.status}`);

      const { used } = await res.json();
      if (used) {
        console.log('‚úÖ –¢–æ–∫–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω, –≥–µ–Ω–µ—Ä–∏—Ä—É—é –Ω–æ–≤—ã–π');
        getNewToken();
      }
    } catch (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–æ–∫–µ–Ω–∞:', err);
    }
  }, 4000);
}

/**
 * üßπ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–ø—Ä–æ—Å–∞
 */
function clearPolling() {
  if (pollId) {
    clearInterval(pollId);
    pollId = null;
  }
}

/**
 * ‚è≥ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
 */
function showLoadingState() {
  qrcodeBox.innerHTML = '‚è≥ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è QR‚Ä¶';
  linkBox.textContent = '';
}
