// üîó URL Google Apps Script Web App (–ø—Ä–æ–≤–µ—Ä—å, —á—Ç–æ —ç—Ç–æ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π /exec!)
const SCRIPT_URL = 'https://script.google.com/macros/s/AKfycbzQ-drrXDEwbhrZ6UN7IE26howT2NDN52yhzhjWssR-QqRIiyL-S_aVb4mtiqSS2VuVcg/exec';

// üéØ DOM-—ç–ª–µ–º–µ–Ω—Ç—ã
const qrcodeBox = document.getElementById('qrcode');
const linkBox   = document.getElementById('link');
const btnRefresh= document.getElementById('refresh');

let currentToken = null;
let pollId = null;

// üîò –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∑–∞–Ω–æ–≤–æ"
btnRefresh.addEventListener('click', () => getNewToken(true));

// üü¢ –ü–µ—Ä–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞
getNewToken();

// üß† –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ —Ç–æ–∫–µ–Ω–∞ –∏ QR-–∫–æ–¥–∞
async function getNewToken(forced = false) {
  clearPolling();
  showLoadingState();

  try {
    const res = await fetch(`${SCRIPT_URL}?action=nextToken${forced ? '&forced=1' : ''}`);
    if (!res.ok) throw new Error(`–û—à–∏–±–∫–∞ ${res.status}`);

    const { token, url } = await res.json();
    currentToken = token;

    renderQR(url);
    linkBox.textContent = url;
    startPolling();
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞:', err);
    linkBox.textContent = '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å QR. –ü—Ä–æ–≤–µ—Ä—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.';
    qrcodeBox.innerHTML = '‚ùå';
  }
}

// üñº –û—Ç—Ä–∏—Å–æ–≤–∫–∞ QR-–∫–æ–¥–∞
function renderQR(url) {
  qrcodeBox.innerHTML = '';
  new QRCode(qrcodeBox, {
    text: url,
    width: 256,
    height: 256,
    correctLevel: QRCode.CorrectLevel.M
  });
}

// üü° –ù–∞—á–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
function startPolling() {
  pollId = setInterval(async () => {
    try {
      const res = await fetch(`${SCRIPT_URL}?action=checkToken&token=${currentToken}`);
      if (!res.ok) throw new Error(`–û—à–∏–±–∫–∞ ${res.status}`);

      const { used } = await res.json();
      if (used) {
        console.log('‚úÖ –¢–æ–∫–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω, –æ–±–Ω–æ–≤–ª—è—é QR');
        getNewToken(); // –ø–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ QR
      }
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞:', err);
    }
  }, 4000);
}

// üîÅ –û—á–∏—Å—Ç–∏—Ç—å —Ç–µ–∫—É—â–∏–π polling
function clearPolling() {
  if (pollId) {
    clearInterval(pollId);
    pollId = null;
  }
}

// ‚è≥ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ "–∑–∞–≥—Ä—É–∑–∫–∏"
function showLoadingState() {
  qrcodeBox.innerHTML = '‚è≥ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è QR‚Ä¶';
  linkBox.textContent = '';
}
